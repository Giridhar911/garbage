#include<iostream>
using namespace std;
#define sz 10
class stacks
{
private:
    int st[sz];
    int top;
public:
    stacks()
    {
        top=-1;
    }
    int Full()
    {
        if(top == (sz-1))
            return 1;
        else
            return 0;

    }
    int Empty()
    {
        if(top==-1)
            return 1;
        else
            return 0;
    }
    void push(int e)
    {
        if(Full())
            cout<<"stack overflow"<<endl;
        else
            st[++top] = e;
    }
    void pop()
    {
        if(!Empty())
            cout<<st[top--]<<endl;
        else
            cout<<"Stack undeflow"<<endl;
    }
    void display()
    {
        if(Empty())
            cout<<"stack underflow"<<endl;
        else
            int i;
            cout<<"STACK: "<<endl;
            int i;
            for(i=0;i<=top;i++)
                cout<<st[i];
    }
};

int main()
{
    int ch,ele;
    stacks s;
    while(1)
    {
        cout<<"ENTER: 1)push 2)pop 3)display 4)exit"<<endl;
        cin>>ch;
    switch (ch)
    {
    case 1:
        cout<<"Enter element to be inc"<<endl;
        cin>>ele;
        s.push(ele);
        break;
    case 2:
        s.pop();
        break;
    case 3:
        s.display();
        cout<<endl;
        break;
    case 4:
        return 0;
    default:
        cout<<"Invalid choice"<<endl;

    }
    }

    return 0;
}
